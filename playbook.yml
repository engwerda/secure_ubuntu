---
- name: Initial Ubuntu Server Hardening
  hosts: all
  become: true
  vars_files:
    - vars/default.yml

  handlers:
    - name: restart ssh
      ansible.builtin.service:
        name: ssh
        state: restarted

    - name: restart fail2ban
      ansible.builtin.service:
        name: fail2ban
        state: restarted

  tasks:
    # Install aptitude.
    - name: Install aptitude
      ansible.builtin.apt:
        name: aptitude
        update_cache: yes
        state: latest
        force_apt_get: yes

    # Apt update
    - name: Update apt packages
      ansible.builtin.apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    # Apt upgrade
    - name: Upgrade all packages on server
      ansible.builtin.apt:
        upgrade: dist
        force_apt_get: yes

    # make sure the sudo package is installed
    - name: Install the `sudo` package
      ansible.builtin.package:
        name: sudo
        state: latest

    # Sudo Group Setup
    - name: Make sure we have a 'wheel' group
      ansible.builtin.group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    # User Setup
    - name: Create a new regular user with sudo privileges
      ansible.builtin.user:
        name: "{{ user }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    - name: Set authorized key for remote user
      ansible.posix.authorized_key:
        user: "{{ user }}"
        state: present
        key: "{{ local_key }}"

    # UFW Setup
    - name: Make sure ufw is installed
      ansible.builtin.apt:
        pkg: ufw
        state: latest

    - name: UFW - Allow SSH connections on tcp port 22
      community.general.ufw:
        rule: allow
        port: '22'
        proto: tcp

    - name: UFW - Deny all other incoming traffic by default
      community.general.ufw:
        state: enabled
        policy: deny
        direction: incoming

    - name: Set ufw logging to on.
      community.general.ufw:
        logging: 'on'

    # Setup unattended upgrades
    - name: Install unattended-upgrades package
      ansible.builtin.apt:
        name: unattended-upgrades
        update_cache: yes

    - name: Enable periodic updates
      ansible.builtin.copy:
        src: templates/10periodic
        dest: /etc/apt/apt.conf.d/10periodic
        owner: root
        group: root
        mode: '0644'

    # Fail2ban
    - name: Make sure fail2ban is installed
      ansible.builtin.apt:
        pkg: fail2ban
        state: latest

    - name: Set up fail2ban
      ansible.builtin.command:
        cmd: cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
        creates: /etc/fail2ban/jail.local
      notify: restart fail2ban

    - name: Make sure fail2ban is enabled
      ansible.builtin.service:
        name: fail2ban
        enabled: yes

    # Install extra Packages
    - name: Update apt
      ansible.builtin.apt:
        update_cache: yes

    - name: Install required system packages
      ansible.builtin.apt:
        name: "{{ extra_packages }}"
        state: latest

    # set ulimit
    - name: configure system settings, file descriptors and number of threads
      community.general.pam_limits:
        domain: "{{ user }}"
        limit_type: "{{ item.limit_type }}"
        limit_item: "{{ item.limit_item }}"
        value: "{{ item.value }}"
      with_items:
        - { limit_type: '-', limit_item: 'nofile', value: 65536 }
        - { limit_type: '-', limit_item: 'nproc', value: 65536 }
        - { limit_type: 'soft', limit_item: 'memlock', value: unlimited }
        - { limit_type: 'hard', limit_item: 'memlock', value: unlimited }

    # reload ulimit config
    - name: Reload settings from all system configuration files
      ansible.builtin.shell: sysctl --system
      changed_when: true

    # Delete root password.
    - name: Delete root password
      ansible.builtin.shell: passwd -d root
      changed_when: true

    # Disable ssh password authentication
    - name: Disallow ssh password authentication
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication no"
        state: present

    # Disable ssh login for root.
    - name: Disable ssh login for root.
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin no'
      notify: restart ssh
